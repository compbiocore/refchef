#!/usr/env/bin python
"""
RefChef - Genome References Management Software
"""

import argparse
import os
from refchef import config
from refchef.utils import *
from refchef.table_utils import read_menu
from refchef.references import *
from refchef.github_utils import *
import glob

parser = argparse.ArgumentParser(description='Controls how to run the reference parser')

parser.add_argument('--execute', '-e', help = 'Executes the YAML file, either the new if it exists or the master if not', action='store_true')
parser.add_argument('--new', '-n', type=str, help = 'Denotes the new YAML')
parser.add_argument('--git', '-g', choices=['commit', 'push'])
parser.add_argument('--skip', help = 'Skip appending the new YAML (mainly for testing)', action='store_true')
parser.add_argument('--config', '-c', type=str, help='Path do to config file in .yaml or .ini format.')
parser.add_argument('--outdir', '-o', action='store_true', help='Directory where references will be saved.')
parser.add_arguemnt('--git_local', '-gl', action='store_true', help='Local git directory, where master.yaml will be located.')
parser.add_argument('--git_remote', '-gr', action='store_true', type=str, help='Git repository')
parser.add_argument('--verbose', '-v', action='store_true', help='Verbose mode')
parser.add_argument('--logs', '-l', action='store_true', help='Logging mode on/off.')
parser.add_argument('--break_on_error', '-b', action='store_true', help='Break on error')

# Parse arguments
arguments = parser.parse_args()

# Check for config file or config arguments.
arg_dict = {'reference_dir': arguments.outdir,
			'git_local': arguments.git_local,
			'git_remote': arguments.git_remote,
			'log': arguments.logs,
			'verbose': arguments.verbose,
			'break_on_error': arguments.break_on_error}

if arguments.config:
	try:
		try:
			d = config.yaml(arguments.config)
		except:
			d = config.ini(arguments.config)
		conf = config.Config(**d)
	except:
		print("""Malformatted config file. See the documentation for details at
				https://compbiocore.github.io/refchef
			  """)
else:
	try:
		conf = config.Config(**arg_dict)
	except:
		print("""No configuration file found. Try passing a .ini or .yaml file to --config (-c),
				 or at least the output direcorty (--outdir, -o) and the path to the local git directory
				 for this project (--git_local, -gl). For more details: refchef-cook --help, or see the
				 documentation at https://compbiocore.github.io/refchef
			""")


# Read menu (master.yaml)
master = read_menu(conf)
# Get full path of master yaml
master_path = "master.yaml"

# If new argument, append that to master and reload master.
if arguments.new is not None:
	new_append(arguments.new, master_path, conf)
	master = read_menu(conf)

installed_references = [r.split("/")[-1] for r in glob.glob(conf.reference_dir + "/*")]
# Get keys from master yaml
ref_keys = list(master.keys())


## Execute, commit and push steps.
git_dir, work_tree = setup_git(conf)

if arguments.execute:
	run = referenceHandler(conf, errorBehavior = processLogical(conf.break_on_error))
	#print(referenceKeys)
	for k in range(0, len(ref_keys)):
		if ref_keys[k] not in installed_references:
			run.processEntry(conf.reference_dir, master.get(ref_keys[k]))
	commit(git_dir, work_tree)

## Git Steps
if arguments.git == 'push'
	pull(git_dir, work_tree)
	commit(git_dir, work_tree)
	push(git_dir, work_tree)
else if arguments.git == 'commit':
	commit(git_dir, work_tree)
